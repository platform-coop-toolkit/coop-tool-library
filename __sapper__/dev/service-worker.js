(function () {
	'use strict';

	// This file is generated by Sapper â€” do not edit it!
	const timestamp = 1590086518045;

	const files = [
		"service-worker-index.html",
		"fonts/notosans-bold.woff",
		"fonts/notosans-bold.woff2",
		"fonts/notosans-bolditalic.woff",
		"fonts/notosans-bolditalic.woff2",
		"fonts/notosans-italic.woff",
		"fonts/notosans-italic.woff2",
		"fonts/notosans-regular.woff",
		"fonts/notosans-regular.woff2",
		"fonts/notosans-semibold.woff",
		"fonts/notosans-semibold.woff2",
		"fonts/notosans-semibolditalic.woff",
		"fonts/notosans-semibolditalic.woff2",
		"fonts/notosansdisplay-bold.woff",
		"fonts/notosansdisplay-bold.woff2",
		"fonts/notosansdisplay-bolditalic.woff",
		"fonts/notosansdisplay-bolditalic.woff2",
		"fonts/notosansdisplay-italic.woff",
		"fonts/notosansdisplay-italic.woff2",
		"fonts/notosansdisplay-regular.woff",
		"fonts/notosansdisplay-regular.woff2",
		"fonts/notosansdisplay-semibold.woff",
		"fonts/notosansdisplay-semibold.woff2",
		"fonts/notosansdisplay-semibolditalic.woff",
		"fonts/notosansdisplay-semibolditalic.woff2",
		"fonts/notoserif-black.woff",
		"fonts/notoserif-black.woff2",
		"fonts/notoserif-blackitalic.woff",
		"fonts/notoserif-blackitalic.woff2",
		"fonts/notoserif-bold.woff",
		"fonts/notoserif-bold.woff2",
		"fonts/notoserif-bolditalic.woff",
		"fonts/notoserif-bolditalic.woff2",
		"fonts/notoserif-italic.woff",
		"fonts/notoserif-italic.woff2",
		"fonts/notoserif-regular.woff",
		"fonts/notoserif-regular.woff2",
		"images/.DS_Store",
		"images/academic.svg",
		"images/add.svg",
		"images/apple-touch-icon.png",
		"images/archive.svg",
		"images/article.svg",
		"images/audio.svg",
		"images/author.svg",
		"images/blog.jpg",
		"images/blog.svg",
		"images/book.svg",
		"images/broken-link.svg",
		"images/browse.svg",
		"images/calendar.svg",
		"images/case-study.svg",
		"images/chevron-down.svg",
		"images/chevron-left.svg",
		"images/chevron-right.svg",
		"images/chevron-up.svg",
		"images/close.svg",
		"images/community-builder.svg",
		"images/coop-types.svg",
		"images/cooperative.svg",
		"images/curriculum.svg",
		"images/customize.svg",
		"images/delete.svg",
		"images/document.svg",
		"images/edit.svg",
		"images/error.svg",
		"images/export.svg",
		"images/external.svg",
		"images/favicon.png",
		"images/favicon.svg",
		"images/favorite-filled.svg",
		"images/favorite.svg",
		"images/favorites.svg",
		"images/filter.svg",
		"images/format.svg",
		"images/formats.svg",
		"images/founder.svg",
		"images/funder.svg",
		"images/goal.svg",
		"images/goals.svg",
		"images/home.svg",
		"images/info.svg",
		"images/language.svg",
		"images/licensing.svg",
		"images/location.svg",
		"images/lock.svg",
		"images/logo.svg",
		"images/member.svg",
		"images/menu.svg",
		"images/online-training.svg",
		"images/page.svg",
		"images/pcc.svg",
		"images/person.jpg",
		"images/policy-maker.svg",
		"images/presentation.svg",
		"images/pricing.svg",
		"images/report.svg",
		"images/researcher.svg",
		"images/reset.svg",
		"images/resources.svg",
		"images/save.svg",
		"images/scroll-down.svg",
		"images/scroll-up.svg",
		"images/search.svg",
		"images/sector.svg",
		"images/sectors.svg",
		"images/see-tools.svg",
		"images/service-provider.svg",
		"images/settings.svg",
		"images/share-tools.svg",
		"images/share.svg",
		"images/sort.svg",
		"images/story.jpg",
		"images/success.svg",
		"images/support-organization.svg",
		"images/tag.svg",
		"images/template.svg",
		"images/toolkit.svg",
		"images/tools.svg",
		"images/topic.svg",
		"images/topics.svg",
		"images/video.svg",
		"images/warning.svg",
		"manifest.json"
	];

	const shell = [
		"client/client.da14c396.js",
		"client/index.224462f2.js",
		"client/share-tools.cfa2fd42.js",
		"client/glossary.0eed5c63.js",
		"client/about.becedb9a.js",
		"client/index.1ee3f6bf.js",
		"client/[slug].b985cb07.js",
		"client/sapper-dev-client.89e34bae.js",
		"client/client.d266a238.js"
	];

	const ASSETS = `cache${timestamp}`;

	// `shell` is an array of all the files generated by the bundler,
	// `files` is an array of everything in the `static` directory
	const to_cache = shell.concat(files);
	const cached = new Set(to_cache);

	self.addEventListener('install', event => {
		event.waitUntil(
			caches
				.open(ASSETS)
				.then(cache => cache.addAll(to_cache))
				.then(() => {
					self.skipWaiting();
				})
		);
	});

	self.addEventListener('activate', event => {
		event.waitUntil(
			caches.keys().then(async keys => {
				// delete old caches
				for (const key of keys) {
					if (key !== ASSETS) await caches.delete(key);
				}

				self.clients.claim();
			})
		);
	});

	self.addEventListener('fetch', event => {
		if (event.request.method !== 'GET' || event.request.headers.has('range')) return;

		const url = new URL(event.request.url);

		// don't try to handle e.g. data: URIs
		if (!url.protocol.startsWith('http')) return;

		// ignore dev server requests
		if (url.hostname === self.location.hostname && url.port !== self.location.port) return;

		// always serve static files and bundler-generated assets from cache
		if (url.host === self.location.host && cached.has(url.pathname)) {
			event.respondWith(caches.match(event.request));
			return;
		}

		// for pages, you might want to serve a shell `service-worker-index.html` file,
		// which Sapper has generated for you. It's not right for every
		// app, but if it's right for yours then uncomment this section
		/*
		if (url.origin === self.origin && routes.find(route => route.pattern.test(url.pathname))) {
			event.respondWith(caches.match('/service-worker-index.html'));
			return;
		}
		*/

		if (event.request.cache === 'only-if-cached') return;

		// for everything else, try the network first, falling back to
		// cache if the user is offline. (If the pages never change, you
		// might prefer a cache-first approach to a network-first one.)
		event.respondWith(
			caches
				.open(`offline${timestamp}`)
				.then(async cache => {
					try {
						const response = await fetch(event.request);
						cache.put(event.request, response.clone());
						return response;
					} catch(err) {
						const response = await cache.match(event.request);
						if (response) return response;

						throw err;
					}
				})
		);
	});

}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
